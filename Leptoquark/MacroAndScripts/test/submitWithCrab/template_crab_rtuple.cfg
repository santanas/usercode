[CRAB]
#
#   This section contains the default values for general parameters.
#   They can be set also as a command-line option, i.e.
#
#   key1 = value1
#   [SECTION]
#   key2 = value2
#
#   in this section corresponds to
#
#   crab.py -key1=value1 -key2=SECTION.value2
#
#   in the command line.
#
jobtype = cmssw
#scheduler = edg 
scheduler = glite
#scheduler = glitecoll
#server_mode = 0
#server_name = crabas.lnl.infn.it/data1/cms/

[CMSSW]

### The data you want to access (to be found on DBS) 
### /primarydataset/datatier/processeddataset
### can be "None" for no input
datasetpath=/mcatnloTTbar/CMSSW_1_6_7-CSA07-1196934034/RECO
#datasetpath=None

### A single processed dataset can contain multiple runs (in the case of real data !!! )
### following selection can narrow down the run selection within a single processed dataset
### selection can be a comma-separated list of run numbers and run number ranges: 1,2,3-4
#runselection=1,2,3-4

### DBS/DLS options
# use_dbs_1 = 0
# dbs_url = http://cmsdoc.cern.ch/cms/test/aprom/DBS/CGIServer/prodquery
# dbs_instance = MCGlobal/Writer
# dls_type = mysql
# dls_endpoint = lfc-cms-test.cern.ch/grid/cms/DLS/LFC


### The ParameterSet you want to use
pset=ttbar_rtuple.cfg
#pset=ttbar_rtuple.py
#pset= pythia.cfg

### Total number of events to be accessed: -1 means all ("-1" is not usable if no input)
#total_number_of_events=20000 
total_number_of_events=-1

### Number of events to be processed per job
events_per_job =20000

### Number of jobs
#number_of_jobs = 1

### The output files produced by your application (comma separated list)
output_file = CSA07mcatnloTTbar_RTuple.root

[USER]

################################
##### server  notification #####
################################
### percentage of finished job in a task. Then a notification email will be sent to you
thresholdLevel = 100
### put in the field eMail your e-mail address-just for server_mode=1 ###
#eMail = robert.stringer@cern.ch 


################################
#### to publish output data ####
################################

publish_data=0
#publish_data_name = yourDataName
#dbs_url_for_publication = http://cmssrv17.fnal.gov:8989/DBS108LOC1/servlet/DBSServlet

################################
#### additional input file #####
################################

## files to be put in InputSandBox, full path or in the current directory
## (wildcard * are allowed): comma separated list
#additional_input_files = /home_local/fanzago/fede.txt, /home_local/fanzago/fede.prova


#################################
######### CRAB  DIR  ############
#################################

## Name of UI directory where CRAB will create job to submit (with full path).
## If commented, the default directory will be "crab_0_data_time"
#ui_working_dir = /full_path/mu03_DY2mu
#ui_working_dir : /full_path/%(dataset)s

#################################
#### JOB OUTPUT MANAGEMENT #####
#################################

### RETRIEVE JOB OUTPUT INTO UI ###
## to have back the job executable output into UI (return_data= 1)
return_data = 1

### If return_data = 1 ###
## UI directory where to store the CMS executable output
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
outputdir=/afs/cern.ch/user/s/santanas/scratch0/Releases/CMSSW_1_6_7__LQ__12_feb_08/src/Leptoquark/RootNtupleMaker/submitWithCrab/output

### If return_data = 1 ###
## UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
#logdir=/home/fanzago/CRAB/UserTools/src/grid_job_log
logdir=/afs/cern.ch/user/s/santanas/scratch0/Releases/CMSSW_1_6_7__LQ__12_feb_08/src/Leptoquark/RootNtupleMaker/submitWithCrab/log

### COPY JOB OUTPUT INTO A SE ###
## if you want to copy the CMS executable output into a SE (i:e castor)
### WARNING: if the copy fails and return_data = 0, the output is lost
copy_data = 0

### if copy_data = 1 ###
## name of the SE where to copy the CMS executable output.
storage_element = srm.cern.ch
## and the SE directory (or the mountpoint) that has to be writable from all
storage_path = /castor/cern.ch/user/s/santanas/PIPPO
#### LNL SRM
#storage_element = t2-srm-02.lnl.infn.it
#storage_path = /srm/managerv1?SFN=/pnfs/lnl.infn.it/data/cms/store/user

#################################
####### JOB MONITORING  ### #####
#################################

### Use central BOSS DB instead of one for each task: the DB must be already been setup!
use_central_bossDB = 0

### Use Boss RealTime monitoring
use_boss_rt = 1 

### To use a different set of BOSS config files specify the location here
boss_clads=

[EDG]
################################
###### EDG specific stuff ######
################################

## to change the CMS-broker RB. The ones available for CMS are "CERN" and "CNAF": the configuration
## files needed to change the broker will be automatically downloaded from CRAB web page. If the
## files are already present on the working directory they will be used. 
rb = CERN

## CMS myproxy server, to proxy delegation
proxy_server = myproxy.cern.ch 

## Role in VOMS
#role = superman

## Group in VOMS
#group = superheros

## If you don't want CRAB to check your proxy
#dont_check_proxy = 1

## to add other requirements to jdl file, as example the Operating System
#requirements = (other.GlueHostOperatingSystemName == "RedHat")

## to add other parameters to jdl file: comma separated list, each item _must_
## be complete, including the closing ";"
#additional_jdl_parameters = AllowZippedISB = false;

## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60

## SE Black List: all the storage elements (SE) containing the following strings (comma
## separated list) will not be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_black_list = edu

## SE White List: only the storage elements (SE) containing the following strings (comma
## separated list) will be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_white_list = infn

## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
ce_black_list = in2p3.fr 

## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_white_list = infn

## fields written into jdl
virtual_organization = cms

## number or retry count
retry_count = 2

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

