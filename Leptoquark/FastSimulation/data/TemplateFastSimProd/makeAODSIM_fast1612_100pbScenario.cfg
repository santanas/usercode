process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 100000}
    
    service =  RandomNumberGeneratorService {
	# This is to initialize the random engine of the source
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engines of Famos
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 1000
	    untracked uint32 famosPileUp = 1001
	    untracked uint32 famosSimHits = 1002
	    untracked uint32 siTrackerGaussianSmearingRecHits = 1003
	    untracked uint32 caloRecHits = 1004
	    untracked uint32 paramMuons = 1005
	}
    }
    
    // If you want to use the (CMS default) CLHEP random, 
    // set these ones to false
    replace famosPileUp.UseTRandomEngine = true
    replace famosSimHits.UseTRandomEngine = true
    replace siTrackerGaussianSmearingRecHits.UseTRandomEngine = true
    replace caloRecHits.UseTRandomEngine = true
    replace paramMuons.UseTRandomEngine = true

    # Generate LQ events:
    include "Leptoquark/FastSimulation/data/LQ1stgen.cfi"
    #include "Leptoquark/FastSimulation/data/LQ2ndgen.cfi"

    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0    
    # replace famosSimHits.SimulatePileUp = false
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true
    replace famosSimHits.SimulateMuons = true

     #Add modules for event weight and event scale
    include "PhysicsTools/HepMCCandAlgos/data/genEventProcID.cfi"
    include "PhysicsTools/HepMCCandAlgos/data/genEventWeight.cfi"
    include "PhysicsTools/HepMCCandAlgos/data/genEventScale.cfi"

   # Tracker MisAlignement 
    include "FastSimulation/Configuration/data/MisAlignment.cff" 

    # ECAL miscalibration. 
    include "FastSimulation/Configuration/data/MisCalibration.cff"
	 	

    service = Timing { }
    
    path p1 = { 
	famosWithEverything
    }

    # To write out events (not need: FastSimulation _is_ fast!)
    include "FastSimulation/Configuration/data/EventContent.cff"
    module o1 = PoolOutputModule { 
        using AODSIMEventContent
        untracked string fileName = 'file:aodsim.root' 
    }
    endpath outpath = { genEventProcID, genEventScale, genEventWeight, o1 }

    
    # Keep the logging output to a nice level #
    #include "FWCore/MessageService/data/MessageLogger.cfi"
    #replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
